# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    description: "A very simple command for demonstration purposes"
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  print-hello:
    docker:
      - image: cimg/node:lts
    steps:
      - print_pipeline_id:
          id: << pipeline.id >>
  save-hello-world-output:
    docker:
      - image: cimg/node:lts
    steps:
      - run: 
          name: "SAY HELLO TO BERY"
          command: echo "SAY HELLO TO BERY" > ~/helloOutput.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - helloOutput.txt
  print-hello-from-output:
    docker:
      - image: cimg/node:lts
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/helloOutput.txt


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print-hello:
          requires:
            - say-hello
      - save-hello-world-output
      - print-hello-from-output:
          requires:
            - save-hello-world-output


